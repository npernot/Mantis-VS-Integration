<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrCannotShowToolWindow" xml:space="preserve">
    <value>Cannot create tool window</value>
  </data>
  <data name="ErrExtensionNotConfigured" xml:space="preserve">
    <value>Please, configure extension before use</value>
  </data>
  <data name="ERROR" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="MantisConnectWindowErrorLoadingView" xml:space="preserve">
    <value>Error loading view</value>
  </data>
  <data name="MantisConnectWindowLoaded" xml:space="preserve">
    <value>Extension loaded</value>
  </data>
  <data name="MantisConnectWindowLoadingView" xml:space="preserve">
    <value>Loading view...</value>
  </data>
  <data name="MantisConnectWindowViewInitializing" xml:space="preserve">
    <value>Initializing {0} view...</value>
  </data>
  <data name="MantisConnectWindowViewLoaded" xml:space="preserve">
    <value>View {0} loaded</value>
  </data>
  <data name="SettingsViewbtnSave" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SettingsViewbtnTest" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="SettingsViewckbCustomizeEndPoint" xml:space="preserve">
    <value>Customize end point</value>
  </data>
  <data name="SettingsViewckbSavePassword" xml:space="preserve">
    <value>Save password</value>
  </data>
  <data name="SettingsViewDisplayName" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SettingsViewErrorLoading" xml:space="preserve">
    <value>Loading settings failed</value>
  </data>
  <data name="SettingsViewlblBaseUrl" xml:space="preserve">
    <value>Mantis base url</value>
  </data>
  <data name="SettingsViewlblEndpoint" xml:space="preserve">
    <value>End point</value>
  </data>
  <data name="SettingsViewlblPassword" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SettingsViewlblUsername" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="SettingsViewLoaded" xml:space="preserve">
    <value>Settings loaded</value>
  </data>
  <data name="SettingsViewLoading" xml:space="preserve">
    <value>Loading Settings...</value>
  </data>
  <data name="SettingsViewSettingsChanged" xml:space="preserve">
    <value>Settings changed. Don't forget to save</value>
  </data>
  <data name="SettingsViewSettingsSaved" xml:space="preserve">
    <value>Settings saved</value>
  </data>
  <data name="SettingsViewTestingConnection" xml:space="preserve">
    <value>Testing connection...</value>
  </data>
  <data name="SettingsViewTestingFailed" xml:space="preserve">
    <value>Connection failed</value>
  </data>
  <data name="SettingsViewTestingFailedMessage" xml:space="preserve">
    <value>Cannot connect to Mantis. Reason : {0}</value>
  </data>
  <data name="SettingsViewTestingSuccess" xml:space="preserve">
    <value>Connection success.</value>
  </data>
  <data name="SettingsViewTestingSuccessMessage" xml:space="preserve">
    <value>User {0} successfully connected</value>
  </data>
  <data name="SUCCESS" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="SettingsViewlblLanguage" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="ProjectViewLoading" xml:space="preserve">
    <value>Loading projects...</value>
  </data>
  <data name="ProjectViewLoaded" xml:space="preserve">
    <value>Projects loaded</value>
  </data>
  <data name="ProjectViewErrorLoading" xml:space="preserve">
    <value>Error loading projects</value>
  </data>
  <data name="ProjectViewDisplayName" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="IssueDetailbtnAddNote" xml:space="preserve">
    <value>Add note</value>
  </data>
  <data name="IssuesListLoading" xml:space="preserve">
    <value>Loading issues...</value>
  </data>
  <data name="IssuesListLoaded" xml:space="preserve">
    <value>{0} issues loaded</value>
  </data>
  <data name="IssuesListErrorLoading" xml:space="preserve">
    <value>Error loading issues</value>
  </data>
  <data name="IssueDetailLoading" xml:space="preserve">
    <value>Loading issue detail...</value>
  </data>
  <data name="IssueDetailLoaded" xml:space="preserve">
    <value>Issues detail loaded</value>
  </data>
  <data name="IssueDetailErrorLoading" xml:space="preserve">
    <value>Error loading issue detail</value>
  </data>
  <data name="IssueDetailErrorEmptyNote" xml:space="preserve">
    <value>Cannot send empty note</value>
  </data>
  <data name="IssueDetailAddingNote" xml:space="preserve">
    <value>Adding your note...</value>
  </data>
  <data name="IssueDetailNoteAdded" xml:space="preserve">
    <value>Note added</value>
  </data>
  <data name="IssueDetailErrorAddingNote" xml:space="preserve">
    <value>Error adding note</value>
  </data>
</root>